statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
tbl_merge(list(all.sign, by.sign), tab_spanner = F)
c.sign <- c[Signs != "result"]
c.sign[, Clinician := factor(Clinician, levels=c("Yes", "No"))]
c.sign[, SPI := factor(SPI, levels=c("Yes", "No"))]
all.sign <- list(
table(c.sign$Clinician, c.sign$SPI)
)
by.sign <- lapply(unique(c.sign$Signs), function(x){
table(c.sign[Signs == x]$Clinician, c.sign[Signs == x]$SPI)
})
result <- lapply("result", function(x){
c <- c[Signs == x]
c[, Clinician := factor(Clinician, levels=c("Suggestive of TB", "Not suggestive of TB"))]
c[, SPI := factor(SPI, levels=c("Suggestive of TB", "Not suggestive of TB"))]
table(c$Clinician, c$SPI)
})
b <- c(all.sign, by.sign, result)
names(b) <- c("All", unique(c.sign$Signs), "result")
b.res <- lapply(b, epi.tests, conf.level = 0.95, method = "clopper-pearson")
b.res <- lapply(b.res, function(x){
q <- as.data.table(x$detail)
q <- q[, lapply(.SD, round, 2), by= .(statistic)]
q
})
b.res <- lapply(b.res, function(x){
x[, all := paste(est, " [", lower, "-", upper, "]", sep="")]
})
b.res <- rbindlist(b.res, idcol = T)
dcast(b.res, statistic ~ .id, value.var = "all") %>% kable %>% kable_styling
c.res <- lapply(b, epi.kappa)
c.res <- lapply(c.res, rbindlist, fill=T, idcol="param")
c.res <- c.res %>% rbindlist(idcol=T) %>%
.[param %in% c("pabak", "kappa")] %>%
.[, .(.id, param, est = round(est, 2), lower = round(lower, 2), upper = round(upper, 2))]
c.res[, all := paste(est, " [", lower, "-", upper, "]", sep="")]
dcast(c.res, param ~ .id, value.var = "all") %>% kable %>% kable_styling
dt.country <- dt.final[Signs != "quality"][value != "Not readable"]
dt.country.sign <- dt.country[Signs != "result"] %>% dcast(`Patient ID`+ Country + Signs ~ Readers,
value.var = "value",
fun.aggregate = unique,
fill=NA)
dt.country.sign <- dt.country.sign %>% dcast(`Patient ID`+ Country + SPI ~ Signs,
value.var = "Clinician",
fun.aggregate = unique,
fill=NA)
dt.country.sign %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-`Patient ID`,
by = SPI,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
dt.country.result <- dt.country[Signs == "result"] %>% dcast(`Patient ID`+ Country + Signs ~ Readers,
value.var = "value",
fun.aggregate = unique,
fill=NA)
dt.country.result <- dt.country.result %>% dcast(`Patient ID`+ Country + SPI ~ Signs,
value.var = "Clinician",
fun.aggregate = unique,
fill=NA)
dt.country.result %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-`Patient ID`,
by = SPI,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
dt.country.reader <- dt.country %>%  dcast(`Patient ID`+ Country + Signs + read_number ~ Readers,
value.var = "value",
fun.aggregate = unique,
fill=NA)
a <- unique(dt.country.reader[, .(Country, Signs)])
e <- unique(dt.country.reader[, .(read_number, Signs)])
list.tbl <- lapply(1:nrow(a), function(x){
dt.temp <- dt.country.reader[Country == a$Country[[x]] & Signs == a$Signs[[x]]]
dt.temp[, Clinician := factor(Clinician, levels = rev(sort(unique(Clinician))))]
dt.temp[, SPI := factor(SPI, levels = rev(sort(unique(SPI))))]
table(dt.temp$Clinician, dt.temp$SPI)
})
list.tbl <- lapply(list.tbl, epi.tests, conf.level = 0.95, method = "clopper-pearson")
list.tbl <- lapply(list.tbl, function(x){ as.data.table(x$detail) })
result.country <- rbindlist(list.tbl)
result.country[, Country := rep(a$Country, each=18)]
result.country[, Signs := rep(a$Signs, each=18)]
result.country[, ci := paste(round(est, 2), " [", round(lower, 2), "-", round(upper, 2), "]", sep="")]
dcast(result.country, statistic + Country ~ Signs, value.var = "ci") %>% kable %>% kable_styling
w <- result.country[Signs != "result" & statistic %in% c("se", "sp")][order(Country)]
w <- result.country[Signs != "result" & statistic %in% "se"][order(Country)]
ggplot(data=w, aes(x= Country, fill=Signs, y=est)) +
geom_bar(stat="identity",position = "dodge")+
scale_fill_brewer(palette="Paired")+
theme_minimal() +
scale_fill_grey() +
ylab("Sensitivity")
w1 <- result.country[Signs != "result" & statistic %in% "sp"][order(Country)]
ggplot(data=w1, aes(x= Country, fill=Signs, y=est)) +
geom_bar(stat="identity",position = "dodge")+
scale_fill_brewer(palette="Paired")+
theme_minimal() +
scale_fill_grey() +
ylab("Specificity")
w <- result.country[Signs == "result" & statistic %in% c("se", "sp")][order(Country)]
dt.bp <- dcast(w, statistic ~ Country, value.var="est")
dt.bp <- as.matrix(dt.bp, rownames=T)
ci.w <- 0.05
par(mar=c(2, 5, 2, 5), xpd=T)
bp <- barplot(dt.bp, ylab="Value", cex.names=0.8, ylim=c(0,1), beside=T, col=c("gray", "grey50"))
legend("right",
legend = c("Sensibility", "Specificity"),
col=c("gray", "grey50"),
pch = 15,
bty = "n",
pt.cex = 2,
cex = 0.7,
horiz = F, inset = c(-0.15, 0))
bp <- as.vector(bp)
segments(bp-ci.w, w$lower, bp+ci.w, w$lower, lwd = 1.5)
segments(bp-ci.w, w$upper, bp+ci.w, w$upper, lwd = 1.5)
segments(bp, w$lower, bp, w$upper, lwd = 1.5)
c <- dt.final[Signs == "result"][value != "Not readable"]
c <- dcast(c, `Patient ID`+ read_number ~ Readers, value.var = "value", fun.aggregate = unique, fill=NA)
c <- c[, .(`Patient ID`, read_number, Clinician, SPI)]
w <- lapply(unique(c$read_number), function(x){
c <- c[read_number == x]
c[, Clinician := factor(Clinician, levels=c("Suggestive of TB", "Not suggestive of TB"))]
c[, SPI := factor(SPI, levels=c("Suggestive of TB", "Not suggestive of TB"))]
table(c$Clinician, c$SPI)
})
w <- lapply(w, epi.tests, conf.level = 0.95, method = "clopper-pearson")
names(w) <- unique(c$read_number)
w <- lapply(w, function(x){
as.data.table(x$detail)
})
w <- rbindlist(w, idcol = T)
w <- w[statistic %in% c("se", "sp")]
w %>% kable %>% kable_styling
dt.bp <- dcast(w, statistic ~ .id, value.var="est")
dt.bp <- as.matrix(dt.bp, rownames=T)
ci.w <- 0.05
par(mar=c(2, 5, 2, 5), xpd=T)
bp <- barplot(dt.bp, ylab="Value", cex.names=0.8, ylim=c(0,1), beside=T, col=c("gray", "grey50"))
legend("right",
legend = c("Sensibility", "Specificity"),
col=c("gray", "grey50"),
pch = 15,
bty = "n",
pt.cex = 2,
cex = 0.7,
horiz = F, inset = c(-0.15, 0))
bp <- as.vector(bp)
segments(bp-ci.w, w$lower, bp+ci.w, w$lower, lwd = 1.5)
segments(bp-ci.w, w$upper, bp+ci.w, w$upper, lwd = 1.5)
segments(bp, w$lower, bp, w$upper, lwd = 1.5)
dt.bp <- as.data.table(t(dt.bp))
dt.bp[, x := 1:4]
lm(dt.bp$se ~ dt.bp$x) %>% summary
lm(dt.bp$sp ~ dt.bp$x) %>% summary
c <- dt.final[Signs != "quality"][value != "Not readable"]
c <- dcast(c, `Patient ID`+ Signs ~ Readers, value.var = "value", fun.aggregate = unique, fill=NA)
c <- c[, .(`Patient ID`, Signs, Clinician, NationalReader)]
b <- c[Signs != "result"]
by.sign <- b %>%
tbl_strata(
strata = Signs,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-`Patient ID`,
by = NationalReader,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
all.sign <- b[, Signs:="All"] %>%
tbl_strata(
strata = Signs,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-`Patient ID`,
by = NationalReader,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
tbl_merge(list(all.sign, by.sign), tab_spanner = F)
c.sign <- c[Signs != "result"]
c.sign[, Clinician := factor(Clinician, levels=c("Yes", "No"))]
c.sign[, NationalReader := factor(NationalReader, levels=c("Yes", "No"))]
all.sign <- list(
table(c.sign$Clinician, c.sign$NationalReader)
)
by.sign <- lapply(unique(c.sign$Signs), function(x){
table(c.sign[Signs == x]$Clinician, c.sign[Signs == x]$NationalReader)
})
result <- lapply("result", function(x){
c = c[Signs == x]
c[, Clinician := factor(Clinician, levels=c("Suggestive of TB", "Not suggestive of TB"))]
c[, NationalReader := factor(NationalReader, levels=c("Suggestive of TB", "Not suggestive of TB"))]
table(c$Clinician, c$NationalReader)
})
b <- c(all.sign, by.sign, result)
names(b) <- c("All", unique(c.sign$Signs), "result")
b.res <- lapply(b, epi.tests, conf.level = 0.95, method = "clopper-pearson")
b.res <- lapply(b.res, function(x){
q <- as.data.table(x$detail)
q <- q[, lapply(.SD, round, 2), by= .(statistic)]
q
})
b.res <- lapply(b.res, function(x){
x[, all := paste(est, " [", lower, "-", upper, "]", sep="")]
})
b.res <- rbindlist(b.res, idcol = T)
dcast(b.res, statistic ~ .id, value.var = "all") %>% kable %>% kable_styling
c.res <- lapply(b, epi.kappa)
c.res <- lapply(c.res, rbindlist, fill=T, idcol="param")
c.res <- c.res %>% rbindlist(idcol=T) %>%
.[param %in% c("pabak", "kappa")] %>%
.[, .(.id, param, est = round(est, 2), lower = round(lower, 2), upper = round(upper, 2))]
c.res[, all := paste(est, " [", lower, "-", upper, "]", sep="")]
dcast(c.res, param ~ .id, value.var = "all") %>% kable %>% kable_styling
dt.country.sign <- dt.country[Signs != "result"] %>% dcast(`Patient ID`+ Country + Signs ~ Readers,
value.var = "value",
fun.aggregate = unique,
fill=NA)
dt.country.sign <- dt.country.sign %>% dcast(`Patient ID`+ Country + NationalReader ~ Signs,
value.var = "Clinician",
fun.aggregate = unique,
fill=NA)
dt.country.sign %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-`Patient ID`,
by = NationalReader,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
dt.country.result = dt.country[Signs == "result"] %>% dcast(`Patient ID`+ Country + Signs ~ Readers,
value.var = "value",
fun.aggregate = unique,
fill=NA)
dt.country.result = dt.country.result %>% dcast(`Patient ID`+ Country + NationalReader ~ Signs,
value.var = "Clinician",
fun.aggregate = unique,
fill=NA)
dt.country.result %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-`Patient ID`,
by = NationalReader,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
list.tbl <- lapply(1:nrow(a), function(x){
dt.temp <- dt.country.reader[Country == a$Country[[x]] & Signs == a$Signs[[x]]]
dt.temp[, Clinician := factor(Clinician, levels = rev(sort(unique(Clinician))))]
dt.temp[, NationalReader := factor(NationalReader, levels = rev(sort(unique(NationalReader))))]
table(dt.temp$Clinician, dt.temp$NationalReader)
})
list.tbl <- lapply(list.tbl, epi.tests, conf.level = 0.95, method = "clopper-pearson")
list.tbl <- lapply(list.tbl, function(x){ as.data.table(x$detail) })
result.country <- rbindlist(list.tbl)
result.country[, Country := rep(a$Country, each=18)]
result.country[, Signs := rep(a$Signs, each=18)]
result.country[, ci := paste(round(est, 2), " [", round(lower, 2), "-", round(upper, 2), "]", sep="")]
dcast(result.country, statistic + Country ~ Signs, value.var = "ci") %>% kable %>% kable_styling
list.tbl <- lapply(1:nrow(e), function(x){
dt.temp <- dt.country.reader[read_number == e$read_number[[x]] & Signs == e$Signs[[x]]]
dt.temp[, Clinician := factor(Clinician, levels = rev(sort(unique(Clinician))))]
dt.temp[, NationalReader := factor(NationalReader, levels = rev(sort(unique(NationalReader))))]
table(dt.temp$Clinician, dt.temp$NationalReader)
})
list.tbl <- lapply(list.tbl, epi.tests, conf.level = 0.95, method = "clopper-pearson")
list.tbl <- lapply(list.tbl, function(x){ as.data.table(x$detail) })
result.number <- rbindlist(list.tbl)
result.number[, read_number := rep(e$read_number, each=18)]
result.number[, Signs := rep(e$Signs, each=18)]
result.number[, ci := paste(round(est, 2), " [", round(lower, 2), "-", round(upper, 2), "]", sep="")]
dcast(result.number, statistic + read_number ~ Signs, value.var = "ci") %>% kable %>% kable_styling
w <- result.country[Signs == "result" & statistic %in% c("se", "sp")][order(Country)]
dt.bp <- dcast(w, statistic ~ Country, value.var="est")
dt.bp <- as.matrix(dt.bp, rownames=T)
ci.w <- 0.05
par(mar=c(2, 5, 2, 5), xpd=T)
bp <- barplot(dt.bp, ylab="Value", cex.names=0.8, ylim=c(0,1), beside=T, col=c("gray", "grey50"))
legend("right",
legend = c("Sensibility", "Specificity"),
col=c("gray", "grey50"),
pch = 15,
bty = "n",
pt.cex = 2,
cex = 0.7,
horiz = F, inset = c(-0.15, 0))
bp <- as.vector(bp)
segments(bp-ci.w, w$lower, bp+ci.w, w$lower, lwd = 1.5)
segments(bp-ci.w, w$upper, bp+ci.w, w$upper, lwd = 1.5)
segments(bp, w$lower, bp, w$upper, lwd = 1.5)
c <- dt.final[Signs == "result"][value != "Not readable"]
c <- dcast(c, `Patient ID`+ read_number ~ Readers, value.var = "value", fun.aggregate = unique, fill=NA)
c <- c[, .(`Patient ID`, read_number, Clinician, NationalReader)]
w <- lapply(unique(c$read_number), function(x){
c <- c[read_number == x]
c[, Clinician := factor(Clinician, levels=c("Suggestive of TB", "Not suggestive of TB"))]
c[, NationalReader := factor(NationalReader, levels=c("Suggestive of TB", "Not suggestive of TB"))]
table(c$Clinician, c$NationalReader)
})
w <- lapply(w, epi.tests, conf.level = 0.95, method = "clopper-pearson")
names(w) <- unique(c$read_number)
w <- lapply(w, function(x){
as.data.table(x$detail)
})
w <- rbindlist(w, idcol = T)
w <- w[statistic %in% c("se", "sp")]
w %>% kable %>% kable_styling
dt.bp <- dcast(w, statistic ~ .id, value.var="est")
dt.bp <- as.matrix(dt.bp, rownames=T)
ci.w <- 0.05
par(mar=c(2, 5, 2, 5), xpd=T)
bp <- barplot(dt.bp, ylab="Value", cex.names=0.8, ylim=c(0,1), beside=T, col=c("gray", "grey50"))
legend("right",
legend = c("Sensibility", "Specificity"),
col=c("gray", "grey50"),
pch = 15,
bty = "n",
pt.cex = 2,
cex = 0.7,
horiz = F, inset = c(-0.15, 0))
bp <- as.vector(bp)
segments(bp-ci.w, w$lower, bp+ci.w, w$lower, lwd = 1.5)
segments(bp-ci.w, w$upper, bp+ci.w, w$upper, lwd = 1.5)
segments(bp, w$lower, bp, w$upper, lwd = 1.5)
dt.bp <- as.data.table(t(dt.bp))
dt.bp[, x := 1:4]
lm(dt.bp$se ~ dt.bp$x) %>% summary
lm(dt.bp$sp ~ dt.bp$x) %>% summary
dt.country.read <- dt.country[Signs != "result"] %>% dcast(`Patient ID`+ Country + read_number ~ Readers,
value.var = "value",
fun.aggregate = unique,
fill=NA)
dt.country.read <- dt.country.read %>% dcast(`Patient ID`+ Country + NationalReader ~ read_number,
value.var = "Clinician",
fun.aggregate = unique,
fill=NA)
dt.country.read %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-`Patient ID`,
by = NationalReader,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
dt.country.read <- dt.country[Signs == "result"] %>% dcast(`Patient ID`+ Country + read_number ~ Readers,
value.var = "value",
fun.aggregate = unique,
fill=NA)
a <- dt.country.read[, .(Country, read_number)] %>% unique
list.tbl <- lapply(1:nrow(a), function(x){
dt.temp <- dt.country.read[Country == a$Country[[x]] & read_number == a$read_number[[x]]]
dt.temp[, Clinician := factor(Clinician, levels = rev(sort(unique(Clinician))))]
dt.temp[, NationalReader := factor(NationalReader, levels = rev(sort(unique(NationalReader))))]
table(dt.temp$Clinician, dt.temp$NationalReader)
})
list.tbl <- lapply(list.tbl, epi.tests, conf.level = 0.95, method = "clopper-pearson")
list.tbl <- lapply(list.tbl, function(x){ as.data.table(x$detail) })
result.country <- rbindlist(list.tbl)
result.country[, Country := rep(a$Country, each=18)]
result.country[, read_number := rep(a$read_number, each=18)]
result.country[, ci := paste(round(est, 2), " [", round(lower, 2), "-", round(upper, 2), "]", sep="")]
dcast(result.country, statistic + Country ~ read_number, value.var = "ci") %>% kable %>% kable_styling
result.country[statistic %in% c("se", "sp")] %>%
ggplot( aes(x=read_number, y=est, fill=Country)) +
geom_bar(position  = "dodge", stat = "identity") +
geom_errorbar(aes(ymin=lower, ymax=upper), position  = "dodge") +
ylab("value") +
facet_wrap(~statistic)
c <- dt.final[Signs != "result"]
c <- dcast(c, `Patient ID`+ Country + read_number + Signs ~ Readers, value.var = "value", fun.aggregate = unique, fill=NA)
c[Clinician == "Yes" & NationalReader == "No", Status := "FP"]
c[Clinician == "No" & NationalReader == "Yes", Status := "FN"]
c %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI),
by = Status,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
) %>% add_overall(last=T)
c <- dt.final[Signs != "result"]
c <- dcast(c, `Patient ID`+ Country + read_number + Signs ~ Readers, value.var = "value", fun.aggregate = unique, fill=NA)
c[Clinician == "Yes" & NationalReader == "No", Status := "FP"]
c[Clinician == "No" & NationalReader == "Yes", Status := "FN"]
c %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI),
by = Status,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
c
c
c$Status
c %>% dcast(Signs + read_number ~ Country + Status, value.var = c("FN", "FP"), fun.agg=sum, na.rm=T)
c %>% dcast(Signs + read_number ~ Country + Status, value.var = "Status", fun.agg=sum, na.rm=T)
c %>% dcast(Signs + read_number ~ Country + Status, value.var = "Status")
c[, signs.read := paste(Signs, read_number)]
c
c %>%
c %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI, Signs, read_number),
by = Status,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
c[order(signs.read)] %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI, Signs, read_number),
by = Status,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
c[order(signs.read)]
c[order(signs.read)] %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI, Signs, read_number),
by = Status,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
))
c[order(signs.read)] %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI, Signs, read_number),
by = Status,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany",
sort = list(everything() ~ "alphanumeric")
))
c
c[, signs.read := paste(Signs, read_number) %>% as.factor]
c <- c[order(signs.read)]
c$signs.read
c %>%
tbl_strata(
strata = Country,
.tbl_fun =
~ .x %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI, Signs, read_number),
by = Status,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany",
sort = list(everything() ~ "alphanumeric")
))
c[Status %in% c("FP", "FN")] %>%
tbl_summary(
include=-c(`Patient ID`, Clinician, NationalReader, SPI, Signs, read_number),
by = Country,
type = everything() ~ "categorical",
statistic = all_categorical() ~ "{p} % ({n}/{N})",
missing="ifany"
)
